public function createSubject()
{
	$this->loadEntities();
	$subject = Subject::New('ProbaSubject', 'Random description');
	$this->em->persist($subject);
	$this->em->flush();
}

public function getAllSubjects(){
	$subjects = $this->loader->getAllSubjects();
	foreach($subjects as $subject) echo $subject->getName();
}

Subject.php
public static function New($name, $description)
{
	$instance = new Subject();
	$instance->name = $name;
	$instance->description = $description;
	return $instance;
}


public function getAllSubjects(){
	$this->loadEntities();
	$subjects = $this->em->getRepository(Subject::class)->findBy(array());
	return $subjects;
}	

public function loadPage($page = '', $data = null, $title = 'Page', $scripts = null)
{
	if (!file_exists(APPPATH.'views/'.$page))
	{
		$this->controller->load->view('error404');
		return;
	}
	
	$this->loadHead($title, $scripts);
	$this->loadFixedHeader();
	$this->loadHeader();
	$this->loadNavbar();
	$this->contentStart();
	$this->controller->load($page, $data);
	$this->contentEnd();
	$this->loadFooter();
	$this->loadFoot();
}
	
	
	array('promenljiva1' => $nesto, ....);
	
	$promenljiva1